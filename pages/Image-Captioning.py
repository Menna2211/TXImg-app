# -*- coding: utf-8 -*-
"""image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ylnYVgaaXNadQj3r0J5A57gszy8xvky
"""

from transformers import VisionEncoderDecoderModel, ViTImageProcessor, AutoTokenizer
import torch
import time
import streamlit as st
from PIL import Image

model = VisionEncoderDecoderModel.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
feature_extractor = ViTImageProcessor.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
tokenizer = AutoTokenizer.from_pretrained("nlpconnect/vit-gpt2-image-captioning")

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)



max_length = 16
num_beams = 4
gen_kwargs = {"max_length": max_length, "num_beams": num_beams}
def predict_step(image):
  if image.mode != "RGB":
     image = image.convert(mode="RGB")

  pixel_values = feature_extractor(images=image, return_tensors="pt").pixel_values
  pixel_values = pixel_values.to(device)

  output_ids = model.generate(pixel_values, **gen_kwargs)

  preds = tokenizer.batch_decode(output_ids, skip_special_tokens=True)
  preds = [pred.strip() for pred in preds]
  return preds



st.title("Image Captioning App")
# define the layout of your app
#st.write("Upload an image:")
uploaded_file = st.file_uploader("Upload an image:", type=["jpg", "jpeg", "png"])
submit_button = st.button("Compute")

if uploaded_file is not None:
    if submit_button :
        # Load the uploaded image
        image = Image.open(uploaded_file)

        # Use the pre-trained model to generate a caption for the uploaded image
        progress_text = "Operation in progress. Please wait."
        bar = st.progress(0, text=progress_text)
        for percent_complete in range(100):
            caption = predict_step(image)
            time.sleep(0.1)
            bar.progress(percent_complete + 1, text=progress_text)
            

        # Display the uploaded image and its generated caption
        st.image(image)
        st.write("Generated Caption:")
        st.write(caption[0])
        time.sleep(5)
        st.success('Congratulations task is done ', icon="âœ…")
        st.balloons()
    else:
      st.error('Error , Plz..... press Compute', icon="ðŸš¨")

